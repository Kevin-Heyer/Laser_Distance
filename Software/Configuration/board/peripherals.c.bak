/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
!!GlobalInfo
product: Peripherals v12.0
processor: MIMXRT1064xxxxA
package_id: MIMXRT1064DVL6A
mcu_data: ksdk2_0
processor_version: 13.0.2
functionalGroups:
- name: BOARD_InitPeripherals
  UUID: 82322bba-3bfe-49e9-a5b1-c80657b3b666
  called_from_default_init: true
  selectedCore: core0
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/

/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
component:
- type: 'system'
- type_id: 'system_54b53072540eeeb8f8e9343e71f28176'
- global_system_definitions:
  - user_definitions: ''
  - user_includes: ''
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/

/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
component:
- type: 'uart_cmsis_common'
- type_id: 'uart_cmsis_common_9cb8e302497aa696fdbb5a4fd622c2a8'
- global_USART_CMSIS_common:
  - quick_selection: 'default'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/

/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
component:
- type: 'gpio_adapter_common'
- type_id: 'gpio_adapter_common_57579b9ac814fe26bf95df0a384c36b6'
- global_gpio_adapter_common:
  - quick_selection: 'default'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "peripherals.h"

/***********************************************************************************************************************
 * BOARD_InitPeripherals functional group
 **********************************************************************************************************************/
/***********************************************************************************************************************
 * MPU initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'MPU'
- type: 'mpu_utility'
- mode: 'MPU'
- custom_name_enabled: 'false'
- type_id: 'mpu_utility_bc3ea1f6add76edb6050f698d423d163'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'MPU'
- config_sets:
  - mpu_init:
    - mpuInit: 'disabled'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */

/* Empty initialization function (commented out)
static void MPU_init(void) {
} */

/***********************************************************************************************************************
 * NVIC initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'NVIC'
- type: 'nvic'
- mode: 'general'
- custom_name_enabled: 'false'
- type_id: 'nvic_57b5eef3774cc60acaede6f5b8bddc67'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'NVIC'
- config_sets:
  - nvic:
    - interrupt_table:
      - 0: []
      - 1: []
    - interrupts: []
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */

/* Empty initialization function (commented out)
static void NVIC_init(void) {
} */

/***********************************************************************************************************************
 * ADC1 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'ADC1'
- type: 'adc_12b1msps_sar'
- mode: 'ADC_GENERAL'
- custom_name_enabled: 'false'
- type_id: 'adc_12b1msps_sar_6a490e886349a7b2b07bed10ce7b299b'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'ADC1'
- config_sets:
  - fsl_adc:
    - clockConfig:
      - clockSource: 'kADC_ClockSourceAD'
      - clockSourceFreq: 'custom:10 MHz'
      - clockDriver: 'kADC_ClockDriver2'
      - samplePeriodMode: 'kADC_SamplePeriodShort2Clocks'
      - enableAsynchronousClockOutput: 'true'
    - conversionConfig:
      - resolution: 'kADC_Resolution12Bit'
      - hardwareAverageMode: 'kADC_HardwareAverageDisable'
      - enableHardwareTrigger: 'software'
      - enableHighSpeed: 'false'
      - enableLowPower: 'false'
      - enableContinuousConversion: 'false'
      - enableOverWrite: 'false'
      - enableDma: 'false'
    - resultingTime: []
    - resultCorrection:
      - doAutoCalibration: 'false'
      - offset: '0'
    - hardwareCompareConfiguration:
      - hardwareCompareMode: 'disabled'
      - value1: '0'
      - value2: '0'
    - enableInterrupt: 'false'
    - adc_interrupt:
      - IRQn: 'ADC1_IRQn'
      - enable_interrrupt: 'enabled'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
    - adc_channels_config: []
    - quick_selection: 'QS_ADC_1'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
const adc_config_t ADC1_config = {
  .enableOverWrite = false,
  .enableContinuousConversion = false,
  .enableHighSpeed = false,
  .enableLowPower = false,
  .enableLongSample = false,
  .enableAsynchronousClockOutput = true,
  .referenceVoltageSource = kADC_ReferenceVoltageSourceAlt0,
  .samplePeriodMode = kADC_SamplePeriodShort2Clocks,
  .clockSource = kADC_ClockSourceAD,
  .clockDriver = kADC_ClockDriver2,
  .resolution = kADC_Resolution12Bit
};

static void ADC1_init(void) {
  /* Initialize ADC1 peripheral. */
  ADC_Init(ADC1_PERIPHERAL, &ADC1_config);
}

/***********************************************************************************************************************
 * CAN1 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'CAN1'
- type: 'flexcan'
- mode: 'interrupts'
- custom_name_enabled: 'false'
- type_id: 'flexcan_a98f4e39f821600f664c89f66f55b020'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'CAN1'
- config_sets:
  - interruptsCfg:
    - messageBufferIrqs: '0'
    - messageBufferIrqs2: '0'
    - interruptsEnable: ''
    - enable_irq: 'false'
    - interrupt_shared:
      - IRQn: 'CAN1_IRQn'
      - enable_interrrupt: 'enabled'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
  - fsl_flexcan:
    - can_config:
      - clockSource: 'kFLEXCAN_ClkSrcOsc'
      - clockSourceFreq: 'BOARD_BootClockRUN'
      - wakeupSrc: 'kFLEXCAN_WakeupSrcUnfiltered'
      - baudRate: '100000'
      - maxMbNum: '16'
      - enableLoopBack: 'true'
      - enableTimerSync: 'true'
      - enableSelfWakeup: 'false'
      - enableIndividMask: 'false'
      - disableSelfReception: 'false'
      - enableListenOnlyMode: 'false'
      - enableSupervisorMode: 'false'
      - timingConfig:
        - propSeg: '2'
        - phaseSeg1: '4'
        - phaseSeg2: '3'
        - rJumpwidth: '2'
        - bitTime: []
    - enableRxFIFO: 'false'
    - rxFIFO:
      - idFilterTable: ''
      - idFilterNum: 'num0'
      - idFilterType: 'kFLEXCAN_RxFifoFilterTypeA'
      - priority: 'kFLEXCAN_RxFifoPrioLow'
    - channels:
      - 0:
        - mbID: '0'
        - mbType: 'mbRx'
        - rxMb:
          - id: '0'
          - format: 'kFLEXCAN_FrameFormatStandard'
          - type: 'kFLEXCAN_FrameTypeData'
      - 1:
        - mbID: '1'
        - mbType: 'mbTx'
        - rxMb:
          - id: '0'
          - format: 'kFLEXCAN_FrameFormatStandard'
          - type: 'kFLEXCAN_FrameTypeData'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
const flexcan_config_t CAN1_config = {
  .wakeupSrc = kFLEXCAN_WakeupSrcUnfiltered,
  .bitRate = 100000UL,
  .maxMbNum = 16U,
  .enableLoopBack = true,
  .enableTimerSync = true,
  .enableSelfWakeup = false,
  .enableIndividMask = false,
  .disableSelfReception = false,
  .enableListenOnlyMode = false,
  .enableSupervisorMode = false,
  .timingConfig = {
    .preDivider = 1,
    .propSeg = 1,
    .phaseSeg1 = 3,
    .phaseSeg2 = 2,
    .rJumpwidth = 1
  }
};
/* Message buffer 0 configuration structure */
const flexcan_rx_mb_config_t CAN1_rx_mb_config_0 = {
  .id = FLEXCAN_ID_STD(0UL),
  .format = kFLEXCAN_FrameFormatStandard,
  .type = kFLEXCAN_FrameTypeData
};

static void CAN1_init(void) {
  FLEXCAN_Init(CAN1_PERIPHERAL, &CAN1_config, CAN1_CLOCK_SOURCE);
  /* Message buffer 0 initialization */
  FLEXCAN_SetRxMbConfig(CAN1_PERIPHERAL, 0, &CAN1_rx_mb_config_0, true);
  /* Message buffer 1 initialization */
  FLEXCAN_SetTxMbConfig(CAN1_PERIPHERAL, 1, true);
}

/***********************************************************************************************************************
 * SEMC_extRAM initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'SEMC_extRAM'
- type: 'semc'
- mode: 'general'
- custom_name_enabled: 'true'
- type_id: 'semc_84a769c198c91c527e11dcec2f5b4b81'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'SEMC'
- config_sets:
  - fsl_semc:
    - enableDCD: 'false'
    - clockConfig:
      - clockSource: 'kSEMC_ClkSrcPeri'
      - clockSourceFreq: 'BOARD_BootClockRUN'
    - semc_config_t:
      - dqsMode: 'kSEMC_Loopbackdqspad'
      - cmdTimeoutCycles: '0'
      - busTimeoutCycles: '0'
      - queueWeight:
        - queueaEnable: 'false'
        - queueaWeight:
          - structORvalue: 'structure'
          - queueaConfig:
            - qos: '0'
            - aging: '0'
            - slaveHitSwith: '0'
            - slaveHitNoswitch: '0'
        - queuebEnable: 'false'
        - queuebWeight:
          - structORvalue: 'structure'
          - queuebConfig:
            - qos: '0'
            - aging: '0'
            - slaveHitSwith: '0'
            - weightPagehit: '0'
            - bankRotation: '0'
    - semc_sdram_config_t:
      - csxPinMux: 'kSEMC_MUXCSX0'
      - semcSdramCs: 'kSEMC_SDRAM_CS0'
      - address: '0x80000000'
      - memsize_input: '32KB'
      - portSize: 'kSEMC_PortSize16Bit'
      - burstLen: 'kSEMC_Sdram_BurstLen1'
      - columnAddrBitNum: 'kSEMC_SdramColunm_9bit'
      - casLatency: 'kSEMC_LatencyThree'
      - tPrecharge2Act_Ns: '18'
      - tAct2ReadWrite_Ns: '18'
      - tRefreshRecovery_Ns: '127'
      - tWriteRecovery_Ns: '12'
      - tCkeOff_Ns: '42'
      - tAct2Prechage_Ns: '42'
      - tSelfRefRecovery_Ns: '67'
      - tRefresh2Refresh_Ns: '60'
      - tAct2Act_Ns: '60'
      - tPrescalePeriod_Ns: '160'
      - tIdleTimeout_Ns: '0'
      - refreshPeriod_nsPerRow: '64'
      - refreshUrgThreshold: '64'
      - refreshBurstLen: '1'
    - sdramArray: []
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
semc_config_t SEMC_extRAM_config = {
  .dqsMode = kSEMC_Loopbackdqspad,
  .cmdTimeoutCycles = 0U,
  .busTimeoutCycles = 0U,
  .queueWeight = {
    .queueaEnable = false,
    .queueaWeight = {
      .queueaConfig = {
        .qos = 0UL,
        .aging = 0UL,
        .slaveHitSwith = 0UL,
        .slaveHitNoswitch = 0UL
      },
    },
    .queuebEnable = false,
    .queuebWeight = {
      .queuebConfig = {
        .qos = 0UL,
        .aging = 0UL,
        .slaveHitSwith = 0UL,
        .weightPagehit = 0UL,
        .bankRotation = 0UL
      },
    }
  }
};
semc_sdram_config_t SEMC_extRAM_sdram_struct = {
  .csxPinMux = kSEMC_MUXCSX0,
  .address = 0x80000000UL,
  .memsize_kbytes = 32,
  .portSize = kSEMC_PortSize16Bit,
  .burstLen = kSEMC_Sdram_BurstLen1,
  .columnAddrBitNum = kSEMC_SdramColunm_9bit,
  .casLatency = kSEMC_LatencyThree,
  .tPrecharge2Act_Ns = 18U,
  .tAct2ReadWrite_Ns = 18U,
  .tRefreshRecovery_Ns = 127U,
  .tWriteRecovery_Ns = 12U,
  .tCkeOff_Ns = 42U,
  .tAct2Prechage_Ns = 42U,
  .tSelfRefRecovery_Ns = 67U,
  .tRefresh2Refresh_Ns = 60U,
  .tAct2Act_Ns = 60U,
  .tPrescalePeriod_Ns = 160UL,
  .tIdleTimeout_Ns = 0UL,
  .refreshPeriod_nsPerRow = 64UL,
  .refreshUrgThreshold = 64UL,
  .refreshBurstLen = 1U,
};

static void SEMC_extRAM_init(void) {
  /* Initialize SEMC peripheral. */
  SEMC_Init(SEMC_EXTRAM_PERIPHERAL, &SEMC_extRAM_config);
  /* Initialize SEMC SDRAM. */
  SEMC_ConfigureSDRAM(SEMC_EXTRAM_PERIPHERAL, kSEMC_SDRAM_CS0, &SEMC_extRAM_sdram_struct, 4000000);
}

/***********************************************************************************************************************
 * CAN2 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'CAN2'
- type: 'flexcan'
- mode: 'interrupts'
- custom_name_enabled: 'false'
- type_id: 'flexcan_a98f4e39f821600f664c89f66f55b020'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'CAN2'
- config_sets:
  - interruptsCfg:
    - messageBufferIrqs: '0'
    - messageBufferIrqs2: '0'
    - interruptsEnable: ''
    - enable_irq: 'false'
    - interrupt_shared:
      - IRQn: 'CAN2_IRQn'
      - enable_interrrupt: 'enabled'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
  - fsl_flexcan:
    - can_config:
      - clockSource: 'kFLEXCAN_ClkSrcOsc'
      - clockSourceFreq: 'BOARD_BootClockRUN'
      - wakeupSrc: 'kFLEXCAN_WakeupSrcUnfiltered'
      - baudRate: '100000'
      - maxMbNum: '16'
      - enableLoopBack: 'false'
      - enableTimerSync: 'true'
      - enableSelfWakeup: 'false'
      - enableIndividMask: 'false'
      - disableSelfReception: 'false'
      - enableListenOnlyMode: 'false'
      - enableSupervisorMode: 'false'
      - timingConfig:
        - propSeg: '2'
        - phaseSeg1: '4'
        - phaseSeg2: '3'
        - rJumpwidth: '2'
        - bitTime: []
    - enableRxFIFO: 'false'
    - rxFIFO:
      - idFilterTable: ''
      - idFilterNum: 'num0'
      - idFilterType: 'kFLEXCAN_RxFifoFilterTypeA'
      - priority: 'kFLEXCAN_RxFifoPrioLow'
    - channels:
      - 0:
        - mbID: '0'
        - mbType: 'mbRx'
        - rxMb:
          - id: '0'
          - format: 'kFLEXCAN_FrameFormatStandard'
          - type: 'kFLEXCAN_FrameTypeData'
      - 1:
        - mbID: '1'
        - mbType: 'mbTx'
        - rxMb:
          - id: '0'
          - format: 'kFLEXCAN_FrameFormatStandard'
          - type: 'kFLEXCAN_FrameTypeData'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
const flexcan_config_t CAN2_config = {
  .wakeupSrc = kFLEXCAN_WakeupSrcUnfiltered,
  .bitRate = 100000UL,
  .maxMbNum = 16U,
  .enableLoopBack = false,
  .enableTimerSync = true,
  .enableSelfWakeup = false,
  .enableIndividMask = false,
  .disableSelfReception = false,
  .enableListenOnlyMode = false,
  .enableSupervisorMode = false,
  .timingConfig = {
    .preDivider = 1,
    .propSeg = 1,
    .phaseSeg1 = 3,
    .phaseSeg2 = 2,
    .rJumpwidth = 1
  }
};
/* Message buffer 0 configuration structure */
const flexcan_rx_mb_config_t CAN2_rx_mb_config_0 = {
  .id = FLEXCAN_ID_STD(0UL),
  .format = kFLEXCAN_FrameFormatStandard,
  .type = kFLEXCAN_FrameTypeData
};

static void CAN2_init(void) {
  FLEXCAN_Init(CAN2_PERIPHERAL, &CAN2_config, CAN2_CLOCK_SOURCE);
  /* Message buffer 0 initialization */
  FLEXCAN_SetRxMbConfig(CAN2_PERIPHERAL, 0, &CAN2_rx_mb_config_0, true);
  /* Message buffer 1 initialization */
  FLEXCAN_SetTxMbConfig(CAN2_PERIPHERAL, 1, true);
}

/***********************************************************************************************************************
 * CAN3 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'CAN3'
- type: 'flexcan'
- mode: 'interrupts'
- custom_name_enabled: 'false'
- type_id: 'flexcan_a98f4e39f821600f664c89f66f55b020'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'CAN3'
- config_sets:
  - interruptsCfg:
    - messageBufferIrqs: '0'
    - messageBufferIrqs2: '0'
    - interruptsEnable: ''
    - enable_irq: 'false'
    - interrupt_shared:
      - IRQn: 'CAN3_IRQn'
      - enable_interrrupt: 'enabled'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
  - fsl_flexcan:
    - can_config:
      - clockSource: 'kFLEXCAN_ClkSrcOsc'
      - clockSourceFreq: 'BOARD_BootClockRUN'
      - wakeupSrc: 'kFLEXCAN_WakeupSrcUnfiltered'
      - flexibleDataRate: 'false'
      - baudRate: '100000'
      - baudRateFD: '2000000'
      - enableBRS: 'false'
      - dataSize: 'kFLEXCAN_8BperMB'
      - maxMbNum: '16'
      - enableLoopBack: 'false'
      - enableTimerSync: 'true'
      - enableSelfWakeup: 'false'
      - enableIndividMask: 'false'
      - disableSelfReception: 'false'
      - enableListenOnlyMode: 'false'
      - enableSupervisorMode: 'false'
      - enableDoze: 'false'
      - timingConfig:
        - propSeg: '2'
        - phaseSeg1: '4'
        - phaseSeg2: '3'
        - rJumpwidth: '2'
        - bitTime: []
        - fpropSeg: '2'
        - fphaseSeg1: '4'
        - fphaseSeg2: '4'
        - frJumpwidth: '2'
        - fbitTime: []
    - enableRxFifoDMA: 'false'
    - enableRxFIFO: 'false'
    - rxFIFO:
      - idFilterTable: ''
      - idFilterNum: 'num0'
      - idFilterType: 'kFLEXCAN_RxFifoFilterTypeA'
      - priority: 'kFLEXCAN_RxFifoPrioLow'
    - channels:
      - 0:
        - mbID: '0'
        - mbType: 'mbRx'
        - rxMb:
          - id: '0'
          - format: 'kFLEXCAN_FrameFormatStandard'
          - type: 'kFLEXCAN_FrameTypeData'
      - 1:
        - mbID: '1'
        - mbType: 'mbTx'
        - rxMb:
          - id: '0'
          - format: 'kFLEXCAN_FrameFormatStandard'
          - type: 'kFLEXCAN_FrameTypeData'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
const flexcan_config_t CAN3_config = {
  .wakeupSrc = kFLEXCAN_WakeupSrcUnfiltered,
  .bitRate = 100000UL,
  .bitRateFD = 2000000UL,
  .maxMbNum = 16U,
  .enableLoopBack = false,
  .enableTimerSync = true,
  .enableSelfWakeup = false,
  .enableIndividMask = false,
  .disableSelfReception = false,
  .enableListenOnlyMode = false,
  .enableSupervisorMode = false,
  .enableDoze = false,
  .timingConfig = {
    .preDivider = 1,
    .propSeg = 1,
    .phaseSeg1 = 3,
    .phaseSeg2 = 2,
    .rJumpwidth = 1
  }
};
/* Message buffer 0 configuration structure */
const flexcan_rx_mb_config_t CAN3_rx_mb_config_0 = {
  .id = FLEXCAN_ID_STD(0UL),
  .format = kFLEXCAN_FrameFormatStandard,
  .type = kFLEXCAN_FrameTypeData
};

static void CAN3_init(void) {
  FLEXCAN_Init(CAN3_PERIPHERAL, &CAN3_config, CAN3_CLOCK_SOURCE);
  /* Message buffer 0 initialization */
  FLEXCAN_SetRxMbConfig(CAN3_PERIPHERAL, 0, &CAN3_rx_mb_config_0, true);
  /* Message buffer 1 initialization */
  FLEXCAN_SetTxMbConfig(CAN3_PERIPHERAL, 1, true);
}

/***********************************************************************************************************************
 * IMU_SPI initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'IMU_SPI'
- type: 'lpspi_cmsis'
- mode: 'interrupt'
- custom_name_enabled: 'true'
- type_id: 'lpspi_cmsis_1121e92343df620ddd685f3c0d572e57'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'LPSPI1'
- config_sets:
  - general:
    - main_config:
      - spi_mode_user: 'ARM_SPI_MODE_MASTER'
      - clockSource: 'LpspiClock'
      - clockSourceFreq: 'BOARD_BootClockRUN'
      - clock_polarity: 'ARM_SPI_CPOL0_CPHA0'
      - power_state: 'ARM_POWER_FULL'
      - baudRate_Bps: '500000'
      - data_bits: '8'
      - bit_format: 'ARM_SPI_MSB_LSB'
      - typeControlMaster: 'ARM_SPI_SS_MASTER_HW_OUTPUT'
      - defaultValueInt: '0'
      - spi_chip_select: 'PCS0'
      - pcsToSckDelayInNanoSec: '0'
      - lastSckToPcsDelayInNanoSec: '0'
      - betweenTransferDelayInNanoSec: '0'
      - signalEventFunctionId: 'LPSPI1_SignalEvent'
      - enableGetFreqFnCustomName: 'false'
      - getFreqFunctionCustomID: 'LPSPI1_GetFreq'
      - enableInitPinsFnCustomName: 'false'
      - initPinFunctionCustomID: 'LPSPI1_InitPins'
      - enableDeinitPinsFnCustomName: 'false'
      - deinitPinFunctionCustomID: 'LPSPI1_DeinitPins'
  - fsl_spi:
    - interrupt:
      - IRQn: 'LPSPI1_IRQn'
      - enable_priority: 'false'
      - priority: '0'
    - quick_selection: 'default_edma'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
/* Get clock source frequency */
uint32_t LPSPI1_GetFreq(void){
  return IMU_SPI_CLOCK_SOURCE_FREQ;
};

static void IMU_SPI_init(void) {
  /* Initialize CMSIS SPI */
  IMU_SPI_PERIPHERAL.Initialize(LPSPI1_SignalEvent);
  /* Power control of CMSIS SPI */
  IMU_SPI_PERIPHERAL.PowerControl(ARM_POWER_FULL);
  /* Control of CMSIS SPI */
  IMU_SPI_PERIPHERAL.Control(ARM_SPI_MODE_MASTER | ARM_SPI_CPOL0_CPHA0 | ARM_SPI_DATA_BITS(8) | ARM_SPI_MSB_LSB | ARM_SPI_SS_MASTER_HW_OUTPUT, 500000);
  /* Control of CMSIS SPI */
  IMU_SPI_PERIPHERAL.Control(ARM_SPI_SET_DEFAULT_TX_VALUE, 0);
}

/***********************************************************************************************************************
 * USB_I2C initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'USB_I2C'
- type: 'lpi2c_cmsis'
- mode: 'interrupt'
- custom_name_enabled: 'true'
- type_id: 'lpi2c_cmsis_79043f5f3bed8339a47810c2601e050a'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'LPI2C1'
- config_sets:
  - fsl_i2c_cmsis:
    - mode: 'kMaster'
    - clockSource: 'Lpi2cClock'
    - clockSourceFreq: 'ClocksTool_DefaultInit'
    - ARM_I2C_BUS_SPEED: 'ARM_I2C_BUS_SPEED_FAST_PLUS'
    - signalEventFunctionId: 'LPI2C1_SignalEvent'
    - enableGetFreqFnCustomName: 'false'
    - getFreqFunctionCustomID: 'LPI2C1_GetFreq'
    - enableInitPinsFnCustomName: 'true'
    - initPinFunctionCustomID: 'LPI2C1_InitPins'
    - enableDeinitPinsFnCustomName: 'true'
    - deinitPinFunctionCustomID: 'LPI2C1_DeinitPins'
    - interrupt:
      - IRQn: 'LPI2C1_IRQn'
      - enable_priority: 'false'
      - priority: '0'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
/* Get clock source frequency */
uint32_t LPI2C1_GetFreq(void){
  return USB_I2C_CLOCK_SOURCE_FREQ;
};

static void USB_I2C_init(void) {
  /* Initialization function */
  USB_I2C_CMSIS_DRIVER.Initialize(LPI2C1_SignalEvent);
  /* Power control function */
  USB_I2C_CMSIS_DRIVER.PowerControl(ARM_POWER_FULL);
  /* Configuration of the I2C communication speed */
  USB_I2C_CMSIS_DRIVER.Control(ARM_I2C_BUS_SPEED, ARM_I2C_BUS_SPEED_FAST_PLUS);
}

/***********************************************************************************************************************
 * QSPI_extFlash initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'QSPI_extFlash'
- type: 'flexspi'
- mode: 'edma'
- custom_name_enabled: 'true'
- type_id: 'flexspi_cc6da638fb0490ad15096647c2b8e52a'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'FLEXSPI2'
- config_sets:
  - fsl_flexspi:
    - flexspiConfig:
      - rxSampleClock: 'kFLEXSPI_ReadSampleClkLoopbackInternally'
      - clockSource: 'FlexSpiClock'
      - clockSourceFreq: 'ClocksTool_DefaultInit'
      - enableSckFreeRunning: 'false'
      - enableCombination: 'false'
      - enableDoze: 'true'
      - enableHalfSpeedAccess: 'false'
      - enableSckBDiffOpt: 'false'
      - enableSameConfigForAll: 'false'
      - seqTimeoutCycleString: '65535'
      - ipGrantTimeoutCycleString: '255'
      - txWatermark: '8'
      - rxWatermark: '8'
      - ahbConfig:
        - enableAHBWriteIpTxFifo: 'false'
        - enableAHBWriteIpRxFifo: 'false'
        - ahbGrantTimeoutCycleString: '255'
        - ahbBusTimeoutCycleString: '65535'
        - resumeWaitCycleString: '32'
        - buffer:
          - 0:
            - priority: '0'
            - masterIndex: '0'
            - bufferSize: '256'
            - enablePrefetch: 'true'
          - 1:
            - priority: '1'
            - masterIndex: '0'
            - bufferSize: '256'
            - enablePrefetch: 'true'
          - 2:
            - priority: '2'
            - masterIndex: '0'
            - bufferSize: '256'
            - enablePrefetch: 'true'
          - 3:
            - priority: '3'
            - masterIndex: '0'
            - bufferSize: '256'
            - enablePrefetch: 'true'
        - enableClearAHBBufferOpt: 'false'
        - enableReadAddressOpt: 'false'
        - enableAHBPrefetch: 'false'
        - enableAHBBufferable: 'false'
        - enableAHBCachable: 'false'
    - flexspiInterrupt:
      - interrupt_sel: ''
    - enableCustomLUT: 'false'
    - lutConfig:
      - flash: 'defaultFlash'
      - lutName: 'defaultLUT'
    - devices_configs: []
    - edma_channels:
      - enable_rx_edma_channel: 'false'
      - edma_rx_channel:
        - uid: '1679756088667'
        - eDMAn: '0'
        - eDMA_source: 'kDmaRequestMuxFlexSPI2Rx'
        - enableTriggerPIT: 'false'
        - init_channel_priority: 'false'
        - edma_channel_Preemption:
          - enableChannelPreemption: 'false'
          - enablePreemptAbility: 'false'
          - channelPriority: '0'
        - enable_custom_name: 'false'
      - enable_tx_edma_channel: 'false'
      - edma_tx_channel:
        - uid: '1679756088693'
        - eDMAn: '1'
        - eDMA_source: 'kDmaRequestMuxFlexSPI2Tx'
        - enableTriggerPIT: 'false'
        - init_channel_priority: 'false'
        - edma_channel_Preemption:
          - enableChannelPreemption: 'false'
          - enablePreemptAbility: 'false'
          - channelPriority: '0'
        - enable_custom_name: 'false'
    - spi_dma_handle:
      - enable_custom_name: 'false'
      - init_callback_dma: 'false'
      - callback_fcn_dma: ''
      - user_data_dma: ''
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
const flexspi_config_t QSPI_extFlash_config = {
  .rxSampleClock = kFLEXSPI_ReadSampleClkLoopbackInternally,
  .enableSckFreeRunning = false,
  .enableCombination = false,
  .enableDoze = true,
  .enableHalfSpeedAccess = false,
  .enableSckBDiffOpt = false,
  .enableSameConfigForAll = false,
  .seqTimeoutCycle = 65535,
  .ipGrantTimeoutCycle = 255,
  .txWatermark = 8U,
  .rxWatermark = 8U,
  .ahbConfig = {
    .enableAHBWriteIpTxFifo = false,
    .enableAHBWriteIpRxFifo = false,
    .ahbGrantTimeoutCycle = 255,
    .ahbBusTimeoutCycle = 65535,
    .resumeWaitCycle = 32,
    .buffer = {
      {
        .priority = 0,
        .masterIndex = 0U,
        .bufferSize = 256U,
        .enablePrefetch = true
      },
      {
        .priority = 1,
        .masterIndex = 0U,
        .bufferSize = 256U,
        .enablePrefetch = true
      },
      {
        .priority = 2,
        .masterIndex = 0U,
        .bufferSize = 256U,
        .enablePrefetch = true
      },
      {
        .priority = 3,
        .masterIndex = 0U,
        .bufferSize = 256U,
        .enablePrefetch = true
      }
    },
    .enableClearAHBBufferOpt = false,
    .enableReadAddressOpt = false,
    .enableAHBPrefetch = false,
    .enableAHBBufferable = false,
    .enableAHBCachable = false
  }
};
flexspi_edma_handle_t QSPI_extFlash_eDMA_Handle;

static void QSPI_extFlash_init(void) {
  /* FLEXSPI2 peripheral initialization */
  FLEXSPI_Init(QSPI_EXTFLASH_PERIPHERAL, &QSPI_extFlash_config);
  /* Initializes the FLEXSPI eDMA handle which is used in transactional functions. */
  FLEXSPI_TransferCreateHandleEDMA(QSPI_EXTFLASH_PERIPHERAL, &QSPI_extFlash_eDMA_Handle, NULL, NULL, NULL, NULL);
}

/***********************************************************************************************************************
 * QSPI_ADC initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'QSPI_ADC'
- type: 'flexspi'
- mode: 'general'
- custom_name_enabled: 'true'
- type_id: 'flexspi_cc6da638fb0490ad15096647c2b8e52a'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'FLEXSPI'
- config_sets:
  - fsl_flexspi:
    - flexspiConfig:
      - rxSampleClock: 'kFLEXSPI_ReadSampleClkLoopbackInternally'
      - clockSource: 'FlexSpiClock'
      - clockSourceFreq: 'ClocksTool_DefaultInit'
      - enableSckFreeRunning: 'false'
      - enableCombination: 'false'
      - enableDoze: 'true'
      - enableHalfSpeedAccess: 'false'
      - enableSckBDiffOpt: 'false'
      - enableSameConfigForAll: 'false'
      - seqTimeoutCycleString: '65535'
      - ipGrantTimeoutCycleString: '255'
      - txWatermark: '8'
      - rxWatermark: '8'
      - ahbConfig:
        - enableAHBWriteIpTxFifo: 'false'
        - enableAHBWriteIpRxFifo: 'false'
        - ahbGrantTimeoutCycleString: '255'
        - ahbBusTimeoutCycleString: '65535'
        - resumeWaitCycleString: '32'
        - buffer:
          - 0:
            - priority: '0'
            - masterIndex: '0'
            - bufferSize: '256'
            - enablePrefetch: 'true'
          - 1:
            - priority: '1'
            - masterIndex: '0'
            - bufferSize: '256'
            - enablePrefetch: 'true'
          - 2:
            - priority: '2'
            - masterIndex: '0'
            - bufferSize: '256'
            - enablePrefetch: 'true'
          - 3:
            - priority: '3'
            - masterIndex: '0'
            - bufferSize: '256'
            - enablePrefetch: 'true'
        - enableClearAHBBufferOpt: 'false'
        - enableReadAddressOpt: 'false'
        - enableAHBPrefetch: 'false'
        - enableAHBBufferable: 'false'
        - enableAHBCachable: 'false'
    - flexspiInterrupt:
      - interrupt_sel: ''
      - interrupt_vectors:
        - enableInterrupt: 'false'
        - interrupt:
          - IRQn: 'FLEXSPI_IRQn'
          - enable_interrrupt: 'enabled'
          - enable_priority: 'false'
          - priority: '0'
          - enable_custom_name: 'false'
    - enableCustomLUT: 'false'
    - lutConfig:
      - flash: 'defaultFlash'
      - lutName: 'defaultLUT'
    - devices_configs: []
    - quick_selection: 'default'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
const flexspi_config_t QSPI_ADC_config = {
  .rxSampleClock = kFLEXSPI_ReadSampleClkLoopbackInternally,
  .enableSckFreeRunning = false,
  .enableCombination = false,
  .enableDoze = true,
  .enableHalfSpeedAccess = false,
  .enableSckBDiffOpt = false,
  .enableSameConfigForAll = false,
  .seqTimeoutCycle = 65535,
  .ipGrantTimeoutCycle = 255,
  .txWatermark = 8U,
  .rxWatermark = 8U,
  .ahbConfig = {
    .enableAHBWriteIpTxFifo = false,
    .enableAHBWriteIpRxFifo = false,
    .ahbGrantTimeoutCycle = 255,
    .ahbBusTimeoutCycle = 65535,
    .resumeWaitCycle = 32,
    .buffer = {
      {
        .priority = 0,
        .masterIndex = 0U,
        .bufferSize = 256U,
        .enablePrefetch = true
      },
      {
        .priority = 1,
        .masterIndex = 0U,
        .bufferSize = 256U,
        .enablePrefetch = true
      },
      {
        .priority = 2,
        .masterIndex = 0U,
        .bufferSize = 256U,
        .enablePrefetch = true
      },
      {
        .priority = 3,
        .masterIndex = 0U,
        .bufferSize = 256U,
        .enablePrefetch = true
      }
    },
    .enableClearAHBBufferOpt = false,
    .enableReadAddressOpt = false,
    .enableAHBPrefetch = false,
    .enableAHBBufferable = false,
    .enableAHBCachable = false
  }
};

static void QSPI_ADC_init(void) {
  /* FLEXSPI peripheral initialization */
  FLEXSPI_Init(QSPI_ADC_PERIPHERAL, &QSPI_ADC_config);
}

/***********************************************************************************************************************
 * RGB_PWM4 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'RGB_PWM4'
- type: 'pwm'
- mode: 'general'
- custom_name_enabled: 'true'
- type_id: 'pwm_8b65bb514bad0e7add761f3ca35a604d'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'PWM4'
- config_sets:
  - fsl_pwm:
    - clockSource: 'SystemClock'
    - clockSourceFreq: 'ClocksTool_DefaultInit'
    - submodules:
      - 0:
        - sm: 'kPWM_Module_0'
        - sm_id: 'SM0'
        - config:
          - clockSource: 'kPWM_BusClock'
          - prescale: 'kPWM_Prescale_Divide_1'
          - pwmFreq: '20 kHz'
          - pairOperation: 'kPWM_Independent'
          - operationMode: 'kPWM_SignedCenterAligned'
          - initializationControl: 'kPWM_Initialize_LocalSync'
          - reloadLogic: 'kPWM_ReloadImmediate'
          - reloadSelect: 'kPWM_LocalReload'
          - reloadFrequency: 'kPWM_LoadEveryOportunity'
          - forceTrigger: 'kPWM_Force_Local'
          - enableDebugMode: 'true'
          - enableWait: 'true'
          - outputTrigger_sel: ''
          - loadOK: 'false'
          - startCounter: 'false'
          - interrupt_sel: ''
        - channels:
          - 0:
            - channel_id: 'A'
            - functionSel: 'pwmOutput'
            - pwm:
              - dutyCyclePercent: '50'
              - level: 'kPWM_HighTrue'
              - deadtime_input_by_force: 'kPWM_UsePwm'
              - clockSource: 'kPWM_BusClock'
              - deadtimeValue: '0'
              - interrupt_sel: ''
          - 1:
            - channel_id: 'B'
            - functionSel: 'notUsed'
          - 2:
            - channel_id: 'X'
            - functionSel: 'notUsed'
        - common_interruptEn: 'false'
        - common_interrupt:
          - IRQn: 'PWM1_0_IRQn'
          - enable_interrrupt: 'enabled'
          - enable_priority: 'false'
          - priority: '0'
          - enable_custom_name: 'false'
    - faultChannels:
      - 0:
        - commonFaultSetting:
          - clockSource: 'kPWM_BusClock'
          - faultFilterPeriod: '1'
          - faultFilterCount: '3'
          - faultGlitchStretch: 'false'
        - faults:
          - 0:
            - fault_id: 'Fault0'
            - faultClearingMode: 'kPWM_Automatic'
            - faultLevelR: 'low'
            - enableCombinationalPathR: 'nonFiltered'
            - recoverMode: 'kPWM_NoRecovery'
            - fault_int_source: 'false'
          - 1:
            - fault_id: 'Fault1'
            - faultClearingMode: 'kPWM_Automatic'
            - faultLevelR: 'low'
            - enableCombinationalPathR: 'nonFiltered'
            - recoverMode: 'kPWM_NoRecovery'
            - fault_int_source: 'false'
          - 2:
            - fault_id: 'Fault2'
            - faultClearingMode: 'kPWM_Automatic'
            - faultLevelR: 'low'
            - enableCombinationalPathR: 'nonFiltered'
            - recoverMode: 'kPWM_NoRecovery'
            - fault_int_source: 'false'
          - 3:
            - fault_id: 'Fault3'
            - faultClearingMode: 'kPWM_Automatic'
            - faultLevelR: 'low'
            - enableCombinationalPathR: 'nonFiltered'
            - recoverMode: 'kPWM_NoRecovery'
            - fault_int_source: 'false'
    - fault_error_interruptEn: 'false'
    - fault_error_interrupt:
      - IRQn: 'PWM1_FAULT_IRQn'
      - enable_interrrupt: 'enabled'
      - enable_priority: 'false'
      - priority: '0'
      - enable_custom_name: 'false'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
/* PWM main configuration */
pwm_config_t RGB_PWM4_SM0_config = {
  .clockSource = kPWM_BusClock,
  .prescale = kPWM_Prescale_Divide_1,
  .pairOperation = kPWM_Independent,
  .initializationControl = kPWM_Initialize_LocalSync,
  .reloadLogic = kPWM_ReloadImmediate,
  .reloadSelect = kPWM_LocalReload,
  .reloadFrequency = kPWM_LoadEveryOportunity,
  .forceTrigger = kPWM_Force_Local,
  .enableDebugMode = true,
  .enableWait = true
};

pwm_signal_param_t RGB_PWM4_SM0_pwm_function_config[1]= {
  {
    .pwmChannel = kPWM_PwmA,
    .dutyCyclePercent = 50U,
    .level = kPWM_HighTrue,
    .deadtimeValue = 0U
  },
};

const pwm_fault_input_filter_param_t RGB_PWM4_faultInputFilter_config = {
  .faultFilterPeriod = 1U,
  .faultFilterCount = 3U,
  .faultGlitchStretch = false
};
const pwm_fault_param_t RGB_PWM4_Fault0_fault_config = {
  .faultClearingMode = kPWM_Automatic,
  .faultLevel = false,
  .enableCombinationalPath = false,
  .recoverMode = kPWM_NoRecovery
};
const pwm_fault_param_t RGB_PWM4_Fault1_fault_config = {
  .faultClearingMode = kPWM_Automatic,
  .faultLevel = false,
  .enableCombinationalPath = false,
  .recoverMode = kPWM_NoRecovery
};
const pwm_fault_param_t RGB_PWM4_Fault2_fault_config = {
  .faultClearingMode = kPWM_Automatic,
  .faultLevel = false,
  .enableCombinationalPath = false,
  .recoverMode = kPWM_NoRecovery
};
const pwm_fault_param_t RGB_PWM4_Fault3_fault_config = {
  .faultClearingMode = kPWM_Automatic,
  .faultLevel = false,
  .enableCombinationalPath = false,
  .recoverMode = kPWM_NoRecovery
};

static void RGB_PWM4_init(void) {
  /* Initialize PWM submodule SM0 main configuration */
  PWM_Init(RGB_PWM4_PERIPHERAL, RGB_PWM4_SM0, &RGB_PWM4_SM0_config);
  /* Initialize fault input filter configuration */
  PWM_SetupFaultInputFilter(RGB_PWM4_PERIPHERAL, &RGB_PWM4_faultInputFilter_config);
  /* Initialize fault channel 0 fault Fault0 configuration */
  PWM_SetupFaults(RGB_PWM4_PERIPHERAL, RGB_PWM4_F0_FAULT0, &RGB_PWM4_Fault0_fault_config);
  /* Initialize fault channel 0 fault Fault1 configuration */
  PWM_SetupFaults(RGB_PWM4_PERIPHERAL, RGB_PWM4_F0_FAULT1, &RGB_PWM4_Fault1_fault_config);
  /* Initialize fault channel 0 fault Fault2 configuration */
  PWM_SetupFaults(RGB_PWM4_PERIPHERAL, RGB_PWM4_F0_FAULT2, &RGB_PWM4_Fault2_fault_config);
  /* Initialize fault channel 0 fault Fault3 configuration */
  PWM_SetupFaults(RGB_PWM4_PERIPHERAL, RGB_PWM4_F0_FAULT3, &RGB_PWM4_Fault3_fault_config);
  /* Initialize deadtime logic input for the channel A */
  PWM_SetupForceSignal(RGB_PWM4_PERIPHERAL, RGB_PWM4_SM0, RGB_PWM4_SM0_A, kPWM_UsePwm);
  /* Setup PWM output setting for submodule SM0 */
  PWM_SetupPwm(RGB_PWM4_PERIPHERAL, RGB_PWM4_SM0, RGB_PWM4_SM0_pwm_function_config, 1U, kPWM_SignedCenterAligned, RGB_PWM4_SM0_COUNTER_FREQ_HZ, RGB_PWM4_SM0_SM_CLK_SOURCE_FREQ_HZ);
}

/***********************************************************************************************************************
 * USB1 initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'USB1'
- type: 'usb'
- mode: 'device'
- custom_name_enabled: 'false'
- type_id: 'usb_cbf31fb9a3cef21890d93e737c3d2690'
- functional_group: 'BOARD_InitPeripherals'
- peripheral: 'USB1'
- config_sets:
  - deviceSetting:
    - vendor_id: '0x1FC9'
    - product_id: '0x00A2'
    - manufacturer_string: 'NXP'
    - product_string: 'Generic'
    - self_powered: 'false'
    - max_power: '100'
    - interfaces:
      - 0:
        - interface_class: 'kClassHid'
        - setting_hid:
          - interface_name: 'HID Generic'
          - subclass: 'kSubclassBootInterface'
          - protocol: 'kProtocolNone'
          - implementation: 'kImplementationGeneric'
          - endpoints_settings:
            - 0:
              - setting_name: 'Default'
              - endpoints:
                - 0:
                  - direction: 'kIn'
                  - transfer_type: 'kInterrupt'
                  - synchronization: 'kNoSynchronization'
                  - usage: 'kData'
                  - max_packet_size_fs: 'k8'
                  - polling_interval_fs: '1'
                  - max_packet_size_hs: 'k8'
                  - polling_interval_hs: '1'
                  - bRefresh: '0'
                  - bSynchAddress: 'NoSynchronization'
                - 1:
                  - direction: 'kOut'
                  - transfer_type: 'kInterrupt'
                  - synchronization: 'kNoSynchronization'
                  - usage: 'kData'
                  - max_packet_size_fs: 'k8'
                  - polling_interval_fs: '1'
                  - max_packet_size_hs: 'k8'
                  - polling_interval_hs: '1'
                  - bRefresh: '0'
                  - bSynchAddress: 'NoSynchronization'
          - report_descriptor:
            - 0:
              - type: 'kUsage_Page'
              - value: '0x81'
              - remarks: 'Usage Page (Vendor defined)'
            - 1:
              - type: 'kUsage'
              - value: '0x82'
              - remarks: 'Usage (Vendor defined)'
            - 2:
              - type: 'kCollection'
              - value: '0x01'
              - remarks: 'Collection (Application)'
            - 3:
              - type: 'kUsage'
              - value: '0x83'
              - remarks: 'Usage (Vendor defined)'
            - 4:
              - type: 'kUsage'
              - value: '0x84'
              - remarks: 'Usage (Vendor defined)'
            - 5:
              - type: 'kLogical_Minimum'
              - value: '-128'
              - remarks: 'Logical Minimum (-128)'
            - 6:
              - type: 'kLogical_Maximum'
              - value: '0x7F'
              - remarks: 'Logical Maximum (127)'
            - 7:
              - type: 'kReport_Size'
              - value: '0x08'
              - remarks: 'Report Size (8U)'
            - 8:
              - type: 'kReport_Count'
              - value: '0x08'
              - remarks: 'Report Count (8U)'
            - 9:
              - type: 'kInput'
              - value: '0x02'
              - remarks: 'Input(Data, Variable, Absolute)'
            - 10:
              - type: 'kUsage'
              - value: '0x84'
              - remarks: 'Usage (Vendor defined)'
            - 11:
              - type: 'kLogical_Minimum'
              - value: '-128'
              - remarks: 'Logical Minimum (-128)'
            - 12:
              - type: 'kLogical_Maximum'
              - value: '0x7F'
              - remarks: 'Logical Maximum (127)'
            - 13:
              - type: 'kReport_Size'
              - value: '0x08'
              - remarks: 'Report Size (8U)'
            - 14:
              - type: 'kReport_Count'
              - value: '0x08'
              - remarks: 'Report Count (8U)'
            - 15:
              - type: 'kOutput'
              - value: '0x02'
              - remarks: 'Output(Data, Variable, Absolute)'
            - 16:
              - type: 'kEnd_Collection'
              - remarks: 'End collection,'
          - quick_selection: 'QS_INTERFACE_HID_GENERIC'
    - quick_selection: 'QS_DEVICE_HID_GENERIC'
  - commonSettings:
    - mpu_init:
      - mpu_init_component: 'MPU'
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */

static void USB1_init(void) {
  USB_DeviceApplicationInit();
}

/***********************************************************************************************************************
 * DebugConsole initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'DebugConsole'
- type: 'debug_console'
- mode: 'general'
- custom_name_enabled: 'false'
- type_id: 'debug_console_51864e4f3ac859dae7b603e07bc4ae33'
- functional_group: 'BOARD_InitPeripherals'
- config_sets:
  - fsl_debug_console:
    - config:
      - SDK_DEBUGCONSOLE: 'DEBUGCONSOLE_REDIRECT_TO_SDK'
      - SDK_DEBUGCONSOLE_UART: 'semihost'
      - DEBUG_CONSOLE_RX_ENABLE: 'true'
      - DEBUG_CONSOLE_PRINTF_MAX_LOG_LEN: '128'
      - DEBUG_CONSOLE_SCANF_MAX_LOG_LEN: '20'
      - DEBUG_CONSOLE_ENABLE_ECHO: 'false'
      - PRINTF_FLOAT_ENABLE: 'false'
      - SCANF_FLOAT_ENABLE: 'false'
      - PRINTF_ADVANCED_ENABLE: 'false'
      - SCANF_ADVANCED_ENABLE: 'false'
      - DEBUG_CONSOLE_TRANSFER_NON_BLOCKING: 'false'
      - DEBUG_CONSOLE_TRANSMIT_BUFFER_LEN: '512'
      - DEBUG_CONSOLE_RECEIVE_BUFFER_LEN: '1024'
      - DEBUG_CONSOLE_TX_RELIABLE_ENABLE: 'true'
      - DEBUG_CONSOLE_DISABLE_RTOS_SYNCHRONIZATION: 'false'
    - peripheral_config:
      - serial_port_type: 'kSerialPort_Swo'
      - swo_config:
        - peripheralSWO: 'ARM'
        - clockSource: 'genericSWOClockSource'
        - clockSourceFreq: 'ClocksTool_DefaultInit'
        - baudRate_Bps: '1000000'
    - debug_console_codegenerator: []
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */

static void DebugConsole_init(void) {
  /* Debug console initialization */
  DbgConsole_Init(DEBUGCONSOLE_INSTANCE, DEBUGCONSOLE_BAUDRATE, DEBUGCONSOLE_TYPE, DEBUGCONSOLE_CLK_FREQ);
}

/***********************************************************************************************************************
 * lwIP initialization code
 **********************************************************************************************************************/
/* clang-format off */
/* TEXT BELOW IS USED AS SETTING FOR TOOLS *************************************
instance:
- name: 'lwIP'
- type: 'lwip'
- mode: 'general'
- custom_name_enabled: 'false'
- type_id: 'lwip_e916e23135ce42147b8e9c16b7728f8a'
- functional_group: 'BOARD_InitPeripherals'
- config_sets:
  - lwip_config:
    - mode: 'freertos'
    - LWIP_NETIF_API: 'true'
    - LWIP_NETCONN: 'true'
    - LWIP_SOCKET: 'true'
    - LWIP_SO_RCVTIMEO: 'true'
    - LWIP_TCPIP_CORE_LOCKING: 'true'
    - MEM_SIZE: '(22 * 1024)'
    - MEMP_NUM_PBUF: '15'
    - MEMP_NUM_UDP_PCB: '6'
    - MEMP_NUM_TCP_PCB: '10'
    - MEMP_NUM_TCP_PCB_LISTEN: '6'
    - MEMP_NUM_TCP_SEG: '22'
    - MEMP_NUM_SYS_TIMEOUT: '10'
    - PBUF_POOL_SIZE: '5'
    - LWIP_SINGLE_NETIF: 'true'
    - LWIP_IPV4: 'true'
    - IP_FORWARD: 'false'
    - IP_REASSEMBLY: 'true'
    - IP_FRAG: 'true'
    - IP_DEFAULT_TTL: '255'
    - LWIP_ARP: 'true'
    - LWIP_ICMP: 'true'
    - ICMP_TTL: 'IP_DEFAULT_TTL'
    - LWIP_BROADCAST_PING: 'false'
    - LWIP_MULTICAST_PING: 'false'
    - LWIP_IGMP: 'false'
    - LWIP_DHCP: 'true'
    - LWIP_DHCP_DOES_ACD_CHECK: 'true'
    - LWIP_IPV6: 'false'
    - LWIP_IPV6_NUM_ADDRESSES: '3'
    - LWIP_IPV6_AUTOCONFIG: 'true'
    - LWIP_IPV6_DHCP6: 'false'
    - LWIP_RAW: 'false'
    - RAW_TTL: 'IP_DEFAULT_TTL'
    - LWIP_TCP: 'true'
    - TCP_TTL: 'IP_DEFAULT_TTL'
    - TCP_QUEUE_OOSEQ: 'false'
    - TCP_MSS: '(1500 - 40)'
    - TCP_SND_BUF: '(6 * TCP_MSS)'
    - TCP_SND_QUEUELEN: '(3 * TCP_SND_BUF) / TCP_MSS'
    - TCP_WND: '(2 * TCP_MSS)'
    - TCP_LISTEN_BACKLOG: 'true'
    - TCP_DEFAULT_LISTEN_BACKLOG: '0xFF'
    - LWIP_UDP: 'true'
    - UDP_TTL: 'IP_DEFAULT_TTL'
    - LWIP_STATS: 'false'
    - LWIP_PROVIDE_ERRNO: 'true'
    - CHECKSUM_BY_HARDWARE: 'false'
    - LWIP_DEBUG: 'true'
    - DEFAULT_THREAD_STACKSIZE: '3000'
    - DEFAULT_THREAD_PRIO: '3'
    - TCPIP_MBOX_SIZE: '32'
    - TCPIP_THREAD_STACKSIZE: '1024'
    - TCPIP_THREAD_PRIO: '8'
    - DEFAULT_UDP_RECVMBOX_SIZE: '12'
    - DEFAULT_TCP_RECVMBOX_SIZE: '12'
    - DEFAULT_ACCEPTMBOX_SIZE: '12'
    - custom_opts: ''
    - modules_include: ''
    - mpu_init:
      - mpu_init_component: 'MPU'
    - user_preinit: 'false'
    - user_init:
      - initFunctionID: 'lwIP_interface_init'
    - lwip_init: 'true'
    - enableCallback: 'false'
    - initFnCallback:
      - callbackFunction: 'tcpip_init_done'
      - arg_ptr: ''
    - ifConfig:
      - 0:
        - ethernetif_config_struct: []
        - phy_handle_struct: []
        - mdio_handle_struct: []
        - mdio_resource_struct: []
        - netif_id: 'netif0'
        - interface: 'enet'
        - netif_mode: 'ipv4'
        - ip_assignment: 'static'
        - ipv4Config:
          - ip_addr:
            - addr: '0.0.0.0'
          - netmask:
            - addr: '255.255.255.0'
          - gateway:
            - addr: '0.0.0.0'
        - netif_function_name: 'defaultFn'
        - netif_input_function_name: 'defaultInputFn'
        - mac_address:
          - useSiliconId: 'false'
          - addr: 'FF-FF-FF-FF-FF-FF'
        - phyConfig:
          - phy_driver: 'phyksz8081'
          - phy_addr: '0x0'
          - mdioConfig:
            - enetConfig:
              - peripheralSelect: 'ENET2'
              - timing:
                - globalClockConfig:
                  - clockSource: 'GlobalClock'
                  - clockSourceFreq: 'BOARD_BootClockRUN'
              - enet_config:
                - phyTiming:
                  - refClockConfig:
                    - clockSource: 'EnetRefClock'
                    - clockSourceFreq: 'BOARD_BootClockRUN'
    - lwip_codegenerator: []
 * BE CAREFUL MODIFYING THIS COMMENT - IT IS YAML SETTINGS FOR TOOLS **********/
/* clang-format on */
/* IPv4 adress, netmask and gateway handle */
ip4_addr_t lwIP_netif0_ipaddr, lwIP_netif0_netmask, lwIP_netif0_gw;
/* Network interface structure */
struct netif lwIP_netif0;
static mdio_handle_t lwIP_netif0_mdio_handle = {
  .resource = LWIP_NETIF0_MDIO_RESOURCE,
  .ops = &LWIP_NETIF0_MDIO_OPS
};
static phy_handle_t lwIP_netif0_phy_handle = {
  .phyAddr = LWIP_NETIF0_PHY_ADDRESS,
  .mdioHandle = &lwIP_netif0_mdio_handle,
  .ops = &LWIP_NETIF0_PHY_OPS
};
ethernetif_config_t lwIP_netif0_enet_config = {
  .phyHandle = &lwIP_netif0_phy_handle,
#ifdef LWIP_NETIF0_MAC_ADDRESS
  .macAddress = LWIP_NETIF0_MAC_ADDRESS,
#endif
};

static void lwIP_init(void) {
  /* lwIP IP address initialization */
  IP4_ADDR(&lwIP_netif0_ipaddr, LWIP_NETIF0_IPADDR0, LWIP_NETIF0_IPADDR1, LWIP_NETIF0_IPADDR2, LWIP_NETIF0_IPADDR3);
  /* lwIP netmask initialization */
  IP4_ADDR(&lwIP_netif0_netmask, LWIP_NETIF0_NETMASK0, LWIP_NETIF0_NETMASK1, LWIP_NETIF0_NETMASK2, LWIP_NETIF0_NETMASK3);
  /* lwIP gateway initialization */
  IP4_ADDR(&lwIP_netif0_gw, LWIP_NETIF0_GW0, LWIP_NETIF0_GW1, LWIP_NETIF0_GW2, LWIP_NETIF0_GW3);
  /* lwIP module initialization */
  tcpip_init(NULL, NULL);
  /* lwIP network interface initialization */
  netifapi_netif_add(&lwIP_netif0, &lwIP_netif0_ipaddr, &lwIP_netif0_netmask, &lwIP_netif0_gw, &lwIP_netif0_enet_config, ethernetif1_init, tcpip_input);
  netifapi_netif_set_default(&lwIP_netif0);
  netifapi_netif_set_up(&lwIP_netif0);
}

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/
void BOARD_InitPeripherals(void)
{
  /* Global initialization */
  ARM_MPU_Disable();

  /* Initialize components */
  ADC1_init();
  CAN1_init();
  SEMC_extRAM_init();
  CAN2_init();
  CAN3_init();
  IMU_SPI_init();
  USB_I2C_init();
  QSPI_extFlash_init();
  QSPI_ADC_init();
  RGB_PWM4_init();
  USB1_init();
  DebugConsole_init();
  lwIP_init();
}

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void)
{
  BOARD_InitPeripherals();
}
