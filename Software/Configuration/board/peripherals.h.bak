/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_adc.h"
#include "fsl_flexcan.h"
#include "fsl_clock.h"
#include "fsl_elcdif.h"
#include "fsl_semc.h"
#include "fsl_flexio_spi.h"
#include "usb_device_composite.h"
#include "fsl_debug_console.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* BOARD_InitPeripherals defines for ADC1 */
/* Definition of peripheral ID */
#define ADC1_PERIPHERAL ADC1
/* Definition of special channel interconnected with ADC_ETC which takes real channel to be measured from ADC_ETC. */
#define ADC1_CHANNEL_DRIVEN_BY_ADC_ETC 16U
/* Definition of peripheral ID */
#define CAN1_PERIPHERAL CAN1
/* Definition of the clock source frequency */
#define CAN1_CLOCK_SOURCE 2000000UL
/* Definition of peripheral ID */
#define LCDIF_PERIPHERAL LCDIF
/* Definition of the expected display clock frequency */
#define LCDIF_EXPECTED_DCLK_FREQ 9210240UL
/* Definition of the panel width */
#define LCDIF_PANEL_WIDTH 480
/* Definition of the panel height */
#define LCDIF_PANEL_HEIGHT 272
/* Definition of the RGB buffer alignment */
#define LCDIF_RGB_BUFFER_ALIGN 64
/* Definition of number of pixel at HSYNC pulse. */
#define LCDIF_HSW 41U
/* Definition of number of pixel at horizontal back porch. */
#define LCDIF_HBP 8U
/* Definition of number of pixel at horizontal front porch. */
#define LCDIF_HFP 4U
/* Definition of number of lines at VSYNC pulse. */
#define LCDIF_VSW 10U
/* Definition of number of lines at vertical back porch. */
#define LCDIF_VBP 2U
/* Definition of number of lines at vertical front porch. */
#define LCDIF_VFP 4U
/* LCDIF interrupt vector ID (number). */
#define LCDIF_LCDIF_IRQN LCDIF_IRQn
/* LCDIF interrupt handler identifier. */
#define LCDIF_LCDIF_IRQHANDLER LCDIF_IRQHandler
/* BOARD_InitPeripherals defines for SEMC */
/* Definition of peripheral ID. */
#define SEMC_PERIPHERAL SEMC
/* Definition of peripheral ID */
#define FLEXIO1_PERIPHERAL FLEXIO1
/* Definition of the clock source frequency */
#define FLEXIO1_CLK_FREQ 1500000UL
/* Debug console is initialized in the peripheral tool */
#define BOARD_INIT_DEBUG_CONSOLE_PERIPHERAL 
/* Definition of serial peripheral instance */
#define DEBUGCONSOLE_INSTANCE 1U
/* Definition of serial peripheral type */
#define DEBUGCONSOLE_TYPE kSerialPort_Uart
/* Definition of the Baud rate */
#define DEBUGCONSOLE_BAUDRATE 115200UL
/* Definition of the clock source frequency */
#define DEBUGCONSOLE_CLK_FREQ 4000000UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const adc_config_t ADC1_config;
extern const flexcan_config_t CAN1_config;
/* Message buffer 0 configuration structure */
extern const flexcan_rx_mb_config_t CAN1_rx_mb_config_0;
/* RGB mode configuration */
extern const elcdif_rgb_mode_config_t LCDIF_rgbConfig;
/* RGB buffer */
extern uint32_t LCDIF_Buffer[2][LCDIF_PANEL_HEIGHT][LCDIF_PANEL_WIDTH];
extern semc_config_t SEMC_config;
extern semc_sdram_config_t SEMC_sdram_struct;
/* FlexIO peripheral configuration */
extern FLEXIO_SPI_Type FLEXIO1_peripheralConfig;
/* FlexIO SPI master configuration */
extern flexio_spi_master_config_t FLEXIO1_config;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
